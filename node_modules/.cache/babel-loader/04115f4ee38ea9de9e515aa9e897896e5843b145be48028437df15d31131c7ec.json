{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend Development Git Projects\\\\React\\\\Portfolio Projects\\\\fitlife\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordReset() {\n  _s();\n  const [email, setEmail] = useState('');\n  const {\n    resetPassword\n  } = useAuth();\n  const handleResetPassword = e => {\n    e.preventDefault();\n    resetPassword(email);\n    alert(\"If an account with that email exists, a reset link has been sent.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordReset, \"KSswlv9V1VYfeovgt7IulY3SsIw=\", false, function () {\n  return [useAuth];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","PasswordReset","_s","email","setEmail","resetPassword","handleResetPassword","e","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Frontend Development Git Projects/React/Portfolio Projects/fitlife/src/components/PasswordReset.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\n\r\nfunction PasswordReset() {\r\n    const [email, setEmail] = useState('');\r\n    const { resetPassword } = useAuth();\r\n\r\n    const handleResetPassword = (e) => {\r\n        e.preventDefault();\r\n        resetPassword(email);\r\n        alert(\"If an account with that email exists, a reset link has been sent.\");\r\n   };\r\n\r\n   return (\r\n    <div>\r\n        <h2>Password Reset</h2>\r\n        <form onSubmit={handleResetPassword}>\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n            />\r\n            <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default PasswordReset;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEQ;EAAc,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEnC,MAAMQ,mBAAmB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,aAAa,CAACF,KAAK,CAAC;IACpBM,KAAK,CAAC,mEAAmE,CAAC;EAC/E,CAAC;EAED,oBACCT,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAMe,QAAQ,EAAET,mBAAoB;MAAAI,QAAA,gBAChCV,OAAA;QACIgB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEf,KAAM;QACbgB,QAAQ,EAAGZ,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFd,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAzBQD,aAAa;EAAA,QAEQH,OAAO;AAAA;AAAAwB,EAAA,GAF5BrB,aAAa;AA2BtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}